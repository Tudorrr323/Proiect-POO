/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proiectpoo;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author tb173
 */
public class TudorGUI2 extends javax.swing.JFrame {

    /**
     * Creates new form TudorUI2
     */
    static FileReader fr = null;
    static BufferedReader br = null;
    static String line = "", cuvant = "";
    static int contor = 0;

    public TudorGUI2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textDesktopuri = new java.awt.TextArea();
        textServere = new java.awt.TextArea();
        textCalculatoare = new java.awt.TextArea();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textDesktopuri.setEditable(false);

        textServere.setEditable(false);

        textCalculatoare.setEditable(false);

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label1.setName(""); // NOI18N
        label1.setText("Vector Desktop-uri");

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label2.setName(""); // NOI18N
        label2.setText("Vector Servere");

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label3.setName(""); // NOI18N
        label3.setText("Vector Calculatoare");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textCalculatoare, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textDesktopuri, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textServere, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textCalculatoare, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textServere, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDesktopuri, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void afisareVectori() {
        try {
            fr = new FileReader("src\\main\\java\\com\\mycompany\\proiectpoo\\textTudor.txt");
            br = new BufferedReader(fr);
            line = br.readLine();
            while (line != null) {
                if (line.isEmpty()) {
                    line = br.readLine();
                    contor++;
                }

                String[] parti = line.split(",");

                switch (contor) {
                    case 0 ->
                        textCalculatoare.append("Placa Video: " + parti[0] + ""
                                + "\nProcesor: " + parti[1]
                                + "\nPlaca de baza: " + parti[2]
                                + "\nMemorie RAM: " + parti[3] + " GB"
                                + "\nStocare" + parti[4] + " GB"
                                + "\nAlimentare: " + parti[5] + " W\n\n");
                    case 1 ->
                        textDesktopuri.append("Nume Tastatura: " + parti[0]
                                + "\nNume Mouse: " + parti[1]
                                + "\nNume Monitor: " + parti[2]
                                + "\nDiagonala Monitor: " + parti[3] + " inch"
                                + "\nPlaca Video: " + parti[4] + ""
                                + "\nProcesor: " + parti[5]
                                + "\nPlaca de baza: " + parti[6]
                                + "\nMemorie RAM: " + parti[7] + " GB"
                                + "\nStocare" + parti[8] + " GB"
                                + "\nAlimentare: " + parti[9] + " W\n\n");
                    case 2 ->
                        textServere.append("Numar Procesoare: " + parti[0]
                                + "\nNumar Porturi USB: " + parti[1]
                                + "\nNumar Discuri Stocare: " + parti[2]
                                + "\nAre Retea Gigabit: " + parti[3]
                                + "\nSistem de Racire: " + parti[4]
                                + "\nPlaca Video: " + parti[5] + ""
                                + "\nProcesor: " + parti[6]
                                + "\nPlaca de baza: " + parti[7]
                                + "\nMemorie RAM: " + parti[8] + " GB"
                                + "\nStocare" + parti[9] + " GB"
                                + "\nAlimentare: " + parti[10] + " W\n\n");
                    default -> {
                    }
                }
                line = br.readLine();
            }
            fr.close();
            br.close();
        } catch (FileNotFoundException e) {
            System.out.println("Fisierul nu a fost gasit: " + fr);
        } catch (IOException ex) {
            Logger.getLogger(TudorGUI2.class.getName()).log(Level.SEVERE, null, ex);
        }//Daca fisierul textTudor.txt nu exista, exceptia va fi prinsa, iar detaliile vor fi logate fara a opri programul.//Daca fisierul textTudor.txt nu exista, exceptia va fi prinsa, iar detaliile vor fi logate fara a opri programul.
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TudorGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TudorGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TudorGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TudorGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TudorGUI2().setVisible(true);
                afisareVectori();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private static java.awt.TextArea textCalculatoare;
    private static java.awt.TextArea textDesktopuri;
    private static java.awt.TextArea textServere;
    // End of variables declaration//GEN-END:variables
}
